labs(
title = "Health Awareness by Flu Shot Status",
x = "Flu Shot",
y = "Health Awareness Index",
fill = "Flu Shot Status"
) +
scale_fill_manual(values = c("Not Taken" = "orange", "Taken" = "green")) +
scale_x_discrete(labels = c("Not Taken" = "No Flu Shot", "Taken" = "Flu Shot")) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(size = 12)
)
# Health Awareness by Flu Shot Status (Minimal Theme)
ggplot(flu_data, aes(x = flu_shot_status, y = HA)) +
geom_boxplot(fill = "grey90", color = "grey30", width = 0.5, outlier.shape = 21) +
stat_summary(fun = mean, geom = "point", shape = 18, size = 3.5, color = "#2d2d2d") +
labs(
title = "Health Awareness by Flu Shot Status",
x = "Flu Shot",
y = "Health Awareness Index"
) +
scale_x_discrete(labels = c("Not Taken" = "No Flu Shot", "Taken" = "Flu Shot")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", margin = margin(b = 15)),
axis.title = element_text(size = 12, color = "grey30"),
axis.text = element_text(color = "grey40"),
panel.grid.major.x = element_blank(),
plot.background = element_rect(fill = "white", color = NA)
)
# Minimal boxplot
ggplot(flu_data, aes(x = flu_shot_status, y = HA)) +
geom_boxplot() +
labs(
title = "Health Awareness by Flu Shot Status",
x = "Flu Shot",
y = "Health Awareness Index"
) +
scale_x_discrete(labels = c("No Flu Shot", "Flu Shot")) +
theme_minimal()
# 3. Plot: Age Distribution by Flu Shot Status ----------------------------
library(ggplot2)
ggplot(flu_data, aes(x = age, fill = flu_shot_status)) +
geom_histogram(position = "dodge", binwidth = 1, color = "black") +
labs(
title = "Age Distribution by Flu Shot Status",
x = "Age",
y = "Count",
fill = "Flu Shot Status"
) +
scale_y_continuous(breaks = scales::breaks_extended(n = 10)) + # Force integer breaks
theme_minimal()
# Convert Y (flu shot status) to a labeled factor
flu_data$flu_shot_status <- factor(flu_data$Y,
levels = c(0, 1),
labels = c("No Flu Shot", "Flu Shot"))
ggplot(flu_data, aes(x = age, fill = flu_shot_status)) +
geom_histogram(position = "dodge", binwidth = 1, color = "black") +
labs(
title = "Age Distribution by Flu Shot Status",
x = "Age",
y = "Count",
fill = "Flu Shot Status"
) +
scale_y_continuous(breaks = scales::breaks_extended(n = 10)) + # Force integer breaks
theme_minimal()
ggplot(flu_data, aes(x = flu_shot_status, y = HA, fill = flu_shot_status)) +
geom_boxplot() +
scale_fill_manual(values = c("Not Taken" = "orange", "Taken" = "green")) +
labs(
title = "Health Awareness by Flu Shot Status",
x = "Flu Shot",
y = "Health Awareness Index"
) +
scale_x_discrete(labels = c("No Flu Shot", "Flu Shot")) +
theme_minimal() +
theme(legend.position = "none")  # Remove color legend
ggplot(flu_data, aes(x = age, fill = factor(Y))) +
geom_histogram(
position = "dodge",
binwidth = 5,  # Match the age grouping in your image
color = "white"  # Bar outline color
) +
labs(
title = "Age Distribution by Flu Shot Status",
x = "Age",
y = "Count",
fill = "Flu Shot Status"
) +
scale_fill_manual(
values = c("0" = "#619CFF", "1" = "#F8766D"),  # Blue/red default ggplot colors
labels = c("No Flu Shot", "Flu Shot")
) +
scale_x_continuous(breaks = seq(50, 80, by = 10)) +  # Match x-axis from image
theme_minimal() +
theme(
legend.position = "top",
panel.grid.major.x = element_blank()
)
# 4. Plot: Health Awareness by Flu Shot Status ----------------------------
ggplot(flu_data, aes(x = flu_shot_status, y = HA, fill = flu_shot_status)) +
geom_boxplot() +
labs(
title = "Health Awareness by Flu Shot Status",
subtitle = "Higher HA values indicate greater health awareness",
x = "Flu Shot Status",
y = "Health Awareness Index (HA)",
fill = "Flu Shot Status"
) +
scale_fill_manual(values = c("#F8766D", "#00BFC4")) +
theme_minimal() +
theme(legend.position = "none")
# 4. Plot: Health Awareness by Flu Shot Status ----------------------------
ggplot(flu_data, aes(x = flu_shot_status, y = HA, fill = flu_shot_status)) +
geom_boxplot() +
labs(
title = "Health Awareness by Flu Shot Status",
x = "Flu Shot Status",
y = "Health Awareness Index (HA)",
fill = "Flu Shot Status"
) +
scale_fill_manual(values = c("#F8766D", "#00BFC4")) +
theme_minimal() +
theme(legend.position = "none")
ggplot(flu_data, aes(x = flu_shot_status, y = HA, fill = flu_shot_status)) +
geom_boxplot() +
scale_fill_manual(values = c("Not Taken" = "orange", "Taken" = "green")) +
labs(
title = "Health Awareness by Flu Shot Status",
x = "Flu Shot",
y = "Health Awareness Index"
) +
scale_x_discrete(labels = c("No Flu Shot", "Flu Shot")) +
theme_minimal() +
theme(legend.position = "none")  # Remove color legend
ggplot(flu_data, aes(x = age, fill = factor(Y))) +
geom_histogram(
position = "dodge",
binwidth = 5,  # Match the age grouping in your image
color = "white"  # Bar outline color
) +
labs(
title = "Age Distribution by Flu Shot Status",
x = "Age",
y = "Count",
fill = "Flu Shot Status"
) +
scale_fill_manual(
values = c("0" = "#619CFF", "1" = "#F8766D"),  # Blue/red default ggplot colors
labels = c("No Flu Shot", "Flu Shot")
) +
scale_x_continuous(breaks = seq(50, 80, by = 10)) +  # Match x-axis from image
theme_minimal() +
theme(
legend.position = "top",
panel.grid.major.x = element_blank()
)
ggplot(clinic, aes(x = age, y = HA, color = prob, shape = as.factor(Y))) +
geom_point(size = 2, alpha = 0.7) +
geom_abline(intercept = line_intercept,
slope = line_slope,
linetype = "dashed", color = "black") +
annotate("text",
x = max(clinic$age) * 0.65,
y = max(clinic$HA) * 0.45,
label = "0.15 predicted probability",
size = 3.5, color = "black") +
scale_color_gradient(low = "blue", high = "red", name = "Predicted Probability") +
scale_shape_manual(values = c(16, 8),
name = "Vaccination Status",
labels = c("Not Vaccinated", "Vaccinated")) +
labs(title = "Observed Data: Age vs Health Awareness",
x = "Age", y = "Health Awareness") +
theme_minimal()
---
title: "Statistical Methods for Bioinformatics Assignment 1"
clinic <- read.table("SMB_data.txt", header = TRUE)
setwd("C:/Users/robbe/Documents/KULeuven/Bioinformatics_2024-2025/Statistical_Methods/Assignment 2025")
clinic <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
setwd("C:/Users/robbe/Documents/KULeuven/Bioinformatics_2024-2025/Statistical_Methods/Assignment 2025")
clinic <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
head(clinic)
clinic <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
setwd("C:/Users/robbe/Documents/KULeuven/Bioinformatics_2024-2025/Statistical_Methods/Assignment 2025")
clinic <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
head(clinic)
clinic$gender <- as.factor(clinic$gender)
clinic$Y <- as.factor(clinic$Y)
summary(clinic)
barplot(table(clinic$age), main = "Barplot of Age Distribution", xlab = "Age",
ylab = "Frequency")
library(ggplot2)
ggplot(clinic, aes(x=age, fill=Y)) +
geom_bar() +
theme_minimal() +
labs(title = "Barplot of Age Distribution by Vaccination Status",
x = "Age", y = "Count", fill = "Vaccination Status")
barplot(table(clinic$HA), main = "Barplot of Health Awareness Distribution",
xlab = "Health Awareness", ylab = "Frequency")
cor.test(data$age, data$HA)
data <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
data <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
data <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
setwd("C:/Users/robbe/Documents/KULeuven/Bioinformatics_2024-2025/Statistical_Methods/Assignment 2025")
clinic <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
head(clinic)
clinic$gender <- as.factor(clinic$gender)
clinic$Y <- as.factor(clinic$Y)
summary(clinic)
barplot(table(clinic$age), main = "Barplot of Age Distribution", xlab = "Age",
ylab = "Frequency")
library(ggplot2)
ggplot(clinic, aes(x=age, fill=Y)) +
geom_bar() +
theme_minimal() +
labs(title = "Barplot of Age Distribution by Vaccination Status",
x = "Age", y = "Count", fill = "Vaccination Status")
barplot(table(clinic$HA), main = "Barplot of Health Awareness Distribution",
xlab = "Health Awareness", ylab = "Frequency")
prop.table(table(clinic$Y))
boxplot(age ~ Y, data = clinic, main = "Boxplot of Age by Vaccination status",
xlab = "Vaccination status", ylab = "Age", col = c("red", "green"),
names = c("Not vaccinated", "Vaccinated"))
boxplot(HA ~ Y, data = clinic, main = "Boxplot of Health awareness by Vaccination status",
xlab = "Vaccination status", ylab = "Health awareness", col = c("red", "green"),
names = c("Not vaccinated", "Vaccinated"))
boxplot(age ~ gender, data=clinic, main="Age by Gender", xlab="Gender", ylab="Age",
col=c("pink", "blue"), names=c("Female", "Male"))
t.test(age ~ gender, data=clinic, var.equal=TRUE)
plot(clinic$age, clinic$HA, col=c("red", "green")[as.numeric(clinic$Y)],
pch=19, main="Age vs Health Awareness",
xlab="Age", ylab="Health Awareness Index")
legend("topright", legend=c("Not vaccinated", "Vaccinated"),
col=c("red", "green"), pch=19)
library(dplyr)
prop_df <- as.data.frame(prop.table(table(clinic$gender, clinic$Y), margin = 1))
colnames(prop_df) <- c("Gender", "Vaccination status", "Proportion")
prop_df$Gender <- factor(prop_df$Gender, levels = c(0, 1), labels = c("Female", "Male"))
prop_df$`Vaccination status` <- factor(prop_df$`Vaccination status`, levels = c(0, 1),
labels = c("Not Vaccinated", "Vaccinated"))
ggplot(prop_df, aes(x = Gender, y = Proportion, fill = `Vaccination status`)) +
geom_bar(stat = "identity", position = "dodge", colour = "black") +
labs(title = "Proportion of Vaccinated vs Non-Vaccinated by Gender",
x = "Gender", y = "Proportion") +
scale_fill_manual(values = c("red", "green")) +
theme_minimal()
data <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
# Set working directory
setwd("C:/Users/robbe/Documents/KULeuven/Bioinformatics_2024-2025/Statistical_Methods/Assignment 2025")
data <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
setwd("C:/Users/robbe/Documents/KULeuven/Bioinformatics_2024-2025/Statistical_Methods/Assignment 2025")
data <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
cor(data[, c("Y", "age", "HA", "gender")])
cor.test(data$age, data$HA)
cor.test(data$age, data$gender)
setwd("C:/Users/robbe/Documents/KULeuven/Bioinformatics_2024-2025/Statistical_Methods/Assignment 2025")
clinic <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
head(clinic)
clinic$gender <- as.factor(clinic$gender)
clinic$Y <- as.factor(clinic$Y)
summary(clinic)
barplot(table(clinic$age), main = "Barplot of Age Distribution", xlab = "Age",
ylab = "Frequency")
library(ggplot2)
ggplot(clinic, aes(x=age, fill=Y)) +
geom_bar() +
theme_minimal() +
labs(title = "Barplot of Age Distribution by Vaccination Status",
x = "Age", y = "Count", fill = "Vaccination Status")
barplot(table(clinic$HA), main = "Barplot of Health Awareness Distribution",
xlab = "Health Awareness", ylab = "Frequency")
prop.table(table(clinic$Y))
boxplot(age ~ Y, data = clinic, main = "Boxplot of Age by Vaccination status",
xlab = "Vaccination status", ylab = "Age", col = c("red", "green"),
names = c("Not vaccinated", "Vaccinated"))
boxplot(HA ~ Y, data = clinic, main = "Boxplot of Health awareness by Vaccination status",
xlab = "Vaccination status", ylab = "Health awareness", col = c("red", "green"),
names = c("Not vaccinated", "Vaccinated"))
boxplot(age ~ gender, data=clinic, main="Age by Gender", xlab="Gender", ylab="Age",
col=c("pink", "blue"), names=c("Female", "Male"))
t.test(age ~ gender, data=clinic, var.equal=TRUE)
plot(clinic$age, clinic$HA, col=c("red", "green")[as.numeric(clinic$Y)],
pch=19, main="Age vs Health Awareness",
xlab="Age", ylab="Health Awareness Index")
legend("topright", legend=c("Not vaccinated", "Vaccinated"),
col=c("red", "green"), pch=19)
library(dplyr)
prop_df <- as.data.frame(prop.table(table(clinic$gender, clinic$Y), margin = 1))
colnames(prop_df) <- c("Gender", "Vaccination status", "Proportion")
prop_df$Gender <- factor(prop_df$Gender, levels = c(0, 1), labels = c("Female", "Male"))
prop_df$`Vaccination status` <- factor(prop_df$`Vaccination status`, levels = c(0, 1),
labels = c("Not Vaccinated", "Vaccinated"))
ggplot(prop_df, aes(x = Gender, y = Proportion, fill = `Vaccination status`)) +
geom_bar(stat = "identity", position = "dodge", colour = "black") +
labs(title = "Proportion of Vaccinated vs Non-Vaccinated by Gender",
x = "Gender", y = "Proportion") +
scale_fill_manual(values = c("red", "green")) +
theme_minimal()
setwd("C:/Users/robbe/Documents/KULeuven/Bioinformatics_2024-2025/Statistical_Methods/Assignment 2025")
data <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
cor(data[, c("Y", "age", "HA", "gender")])
cor.test(data$age, data$HA)
cor.test(data$age, data$gender)
cor.test(data$HA, data$gender)
cor.test(data$age, data$Y)
cor.test(data$HA, data$Y)
cor.test(data$gender, data$Y)
glm1 <- glm(Y~age + HA + gender, family = binomial(link = "logit"), data = clinic)
summary(glm1)
glm2 <- glm(Y~age + HA, family = binomial(link = "logit"), data = clinic)
summary(glm2)
library(AICcmodavg)
logreg1 <- glm(Y ~ age + HA, data = clinic, family = binomial(link = "logit"))
logreg2 <- glm(Y ~ age + HA + gender, data = clinic, family = binomial(link = "logit"))
logreg3 <- glm(Y ~ age * HA, data = clinic, family = binomial(link = "logit"))
logreg4 <- glm(Y ~ age * gender, data = clinic, family = binomial(link = "logit"))
logreg5 <- glm(Y ~ HA * gender, data = clinic, family = binomial(link = "logit"))
logreg6 <- glm(Y ~ age * HA * gender, data = clinic, family = binomial(link = "logit"))
model_list <- list(
logreg1 = logreg1,
logreg2 = logreg2,
logreg3 = logreg3,
logreg4 = logreg4,
logreg5 = logreg5,
logreg6 = logreg6
)
aic_results <- aictab(cand.set = model_list, modnames = names(model_list))
aic_results
exp(coef(glm2))
clinic$prob <- predict(glm2, newdata = clinic, type = "response")
# Calculate model coefficients for the decision boundary
b <- coef(glm2)
threshold <- qlogis(0.15)
line_intercept <- (threshold - b[1]) / b[3]
line_slope <- -b[2] / b[3]
ggplot(clinic, aes(x = age, y = HA, color = prob, shape = as.factor(Y))) +
geom_point(size = 2, alpha = 0.7) +
geom_abline(intercept = line_intercept,
slope = line_slope,
linetype = "dashed", color = "black") +
annotate("text",
x = max(clinic$age) * 0.65,
y = max(clinic$HA) * 0.45,
label = "0.15 predicted probability",
size = 3.5, color = "black") +
scale_color_gradient(low = "blue", high = "red", name = "Predicted Probability") +
scale_shape_manual(values = c(16, 8),
name = "Vaccination Status",
labels = c("Not Vaccinated", "Vaccinated")) +
labs(title = "Observed Data: Age vs Health Awareness",
x = "Age", y = "Health Awareness") +
theme_minimal()
clinic$prob <- predict(glm2, newdata = clinic, type = "response")
# Calculate model coefficients for the decision boundary
b <- coef(glm2)
threshold <- qlogis(0.15)
line_intercept <- (threshold - b[1]) / b[3]
line_slope <- -b[2] / b[3]
ggplot(clinic, aes(x = age, y = HA, color = prob, shape = as.factor(Y))) +
geom_point(size = 2, alpha = 0.7) +
#geom_abline(intercept = line_intercept,
#           slope = line_slope,
#          linetype = "dashed", color = "black") +
annotate("text",
x = max(clinic$age) * 0.65,
y = max(clinic$HA) * 0.45,
label = "0.15 predicted probability",
size = 3.5, color = "black") +
scale_color_gradient(low = "blue", high = "red", name = "Predicted Probability") +
scale_shape_manual(values = c(16, 8),
name = "Vaccination Status",
labels = c("Not Vaccinated", "Vaccinated")) +
labs(title = "Observed Data: Age vs Health Awareness",
x = "Age", y = "Health Awareness") +
theme_minimal()
clinic$prob <- predict(glm2, newdata = clinic, type = "response")
# Calculate model coefficients for the decision boundary
b <- coef(glm2)
threshold <- qlogis(0.15)
line_intercept <- (threshold - b[1]) / b[3]
line_slope <- -b[2] / b[3]
ggplot(clinic, aes(x = age, y = HA, color = prob, shape = as.factor(Y))) +
geom_point(size = 2, alpha = 0.7) +
#geom_abline(intercept = line_intercept,
#           slope = line_slope,
#          linetype = "dashed", color = "black") +
annotate("text",
x = max(clinic$age) * 0.65,
y = max(clinic$HA) * 0.45,
# label = "0.15 predicted probability", size = 3.5, color = "black") +
scale_color_gradient(low = "blue", high = "red", name = "Predicted Probability") +
scale_shape_manual(values = c(16, 8),
name = "Vaccination Status",
labels = c("Not Vaccinated", "Vaccinated")) +
labs(title = "Observed Data: Age vs Health Awareness",
x = "Age", y = "Health Awareness") +
theme_minimal()
# Set working directory
setwd("C:/Users/robbe/Documents/KULeuven/Bioinformatics_2024-2025/Statistical_Methods/Assignment 2025")
# 1. Data Preparation -----------------------------------------------------
# Load data from assignment_data.txt (TSV format)
flu_data <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
# Convert gender to factor
flu_data$gender <- factor(flu_data$gender, levels = c(0, 1), labels = c("Female", "Male"))
# Convert Y (flu shot status) to a labeled factor
flu_data$flu_shot_status <- factor(flu_data$Y,
levels = c(0, 1),
labels = c("No Flu Shot", "Flu Shot"))
# Check the first few rows of the data
head(flu_data)
# 2. Exploratory Analysis -------------------------------------------------
cat("\n=== Descriptive Statistics ===\n")
summary(flu_data)
cat("\n=== Flu Shot Distribution ===\n")
table(flu_data$flu_shot_status)
cat("\n=== Gender Distribution ===\n")
table(flu_data$gender)
# 3. Plot: Age Distribution by Flu Shot Status ----------------------------
library(ggplot2)
ggplot(flu_data, aes(x = age, fill = flu_shot_status)) +
geom_histogram(position = "dodge", binwidth = 1, color = "black") +
labs(
title = "Age Distribution by Flu Shot Status",
x = "Age",
y = "Count",
fill = "Flu Shot Status"
) +
scale_y_continuous(breaks = scales::breaks_extended(n = 10)) + # Force integer breaks
theme_minimal()
clinic <- read.table("assignment_data.txt", header = TRUE, sep = "\t")
clinic$gender <- factor(clinic$gender)
clinic$Y <- factor(clinic$Y)
# Convert to numeric for correlations
clinic$Y_num <- as.numeric(as.character(clinic$Y))
clinic$gender_num <- as.numeric(as.character(clinic$gender))
# 1. Age comparison
age_test <- t.test(age ~ Y, data = clinic)
# 2. HA comparison
HA_test <- t.test(HA ~ Y, data = clinic)
# 3. Gender association
gender_test <- chisq.test(table(clinic$gender, clinic$Y))
# 4. Correlation matrix
cor_matrix <- cor(clinic[,c("Y_num","age","HA","gender_num")])
# 5. Effect sizes
age_effect <- cor(clinic$Y_num, clinic$age)^2
HA_effect <- cor(clinic$Y_num, clinic$HA)^2
# Print results
print(age_test)
print(HA_test)
print(gender_test)
print(cor_matrix)
cat("Age R²:", age_effect, "\nHA R²:", HA_effect)
# Print results
print(age_test)
print(HA_test)
print(gender_test)
mean(HA)
mean(flu_data$HA)
sd(clinic$age[clinic$Y == 1]) # Vaccinated
sd(clinic$age[clinic$Y == 0]) # Unvaccinated
sd(clinic$HA[clinic$Y == 1])  # Vaccinated
sd(clinic$HA[clinic$Y == 0])  # Unvaccinated
sd(clinic$age)
sd(clinic$age)
sd(clinic$HA)
sd(data$age)
sd(data$HA)
sd(data$age[data$Y == 1]) # Vaccinated
sd(data$age[data$Y == 0]) # Unvaccinated
sd(data$HA[data$Y == 1])  # Vaccinated
# 3. Plot: Age Distribution by Flu Shot Status ----------------------------
library(ggplot2)
ggplot(data, aes(x = age, fill = Y)) +
geom_histogram(position = "dodge", binwidth = 1, color = "black") +
labs(
title = "Age Distribution by Flu Shot Status",
x = "Age",
y = "Count",
fill = "Flu Shot Status"
) +
scale_y_continuous(breaks = scales::breaks_extended(n = 10)) + # Force integer breaks
theme_minimal()
# Convert Y (flu shot status) to a labeled factor
data$flu_shot_status <- factor(data$Y,
levels = c(0, 1),
labels = c("No Flu Shot", "Flu Shot"))
# 3. Plot: Age Distribution by Flu Shot Status ----------------------------
library(ggplot2)
ggplot(data, aes(x = age, fill = flu_shot_status)) +
geom_histogram(position = "dodge", binwidth = 1, color = "black") +
labs(
title = "Age Distribution by Flu Shot Status",
x = "Age",
y = "Count",
fill = "Flu Shot Status"
) +
scale_y_continuous(breaks = scales::breaks_extended(n = 10)) + # Force integer breaks
theme_minimal()
# 4. Plot: Health Awareness by Flu Shot Status ----------------------------
ggplot(data, aes(x = flu_shot_status, y = HA, fill = flu_shot_status)) +
geom_boxplot() +
labs(
title = "Health Awareness by Flu Shot Status",
x = "Flu Shot Status",
y = "Health Awareness Index (HA)",
fill = "Flu Shot Status"
) +
scale_fill_manual(values = c("#F8766D", "#00BFC4")) +
theme_minimal() +
theme(legend.position = "none")
